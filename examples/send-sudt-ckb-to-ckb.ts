import PWCore, {Address, Amount, AddressType, IndexerCollector, Platform, RawProvider, SUDT } from '@lay2/pw-core';

// Public RPC servers provided by Lay2.
const CKB_NODE_RPC_URL = 'https://testnet.ckb.dev/rpc';
const CKB_INDEXER_RPC_URL = 'https://testnet.ckb.dev/indexer';

// The following private key corresponds with native CKB address ckt1qzda0cr08m85hc8jlnfp3zer7xulejywt49kt2rr0vthywaa50xwsqf8y2wrqq8y3up36e8mqg3tj8wkeyqs8uccxpsdt (Default Lock; CKB2021).
const PRIVATE_KEY = '0xcd708059624d8301382972808b3e504b5ea3d94e210edf229f48cadcb8fe0989';

// The following native CKB is the destination where the SUDT will be sent to (Default Lock; Pre2021; Short Format).
const CKB_ADDRESS = 'ckt1qyqvtjamvjcxra3q4jpj2sv0j5j67kdwdjkqda8a39';

(async function main()
{
    const provider = new RawProvider(PRIVATE_KEY); // A built-in Provider for raw private keys. This can be replaced with wallet providers like EthProvider.
    const collector = new IndexerCollector(CKB_INDEXER_RPC_URL); // A Collector to retrive cells from the CKB Indexer RPC.
    const pwcore = await new PWCore(CKB_NODE_RPC_URL).init(provider, collector); // Initialize PWCore.

    const sudt = new SUDT(provider.address.toLockScript().toHash()); // SUDT is identified by the lock hash of the CKB native account generated by the private key.
    const destinationAddress = new Address(CKB_ADDRESS, AddressType.ckb); // This is the destination address.
    const sendAmount = new Amount('100', 0); // The number of SUDT tokens to send. (Decimals "0" must be specified for SUDT.)
    const txHash = await pwcore.sendSUDT(sudt, destinationAddress, sendAmount);

    console.log(`Sending from: ${provider.address.toCKBAddress()}`);
    console.log(`Sending to: ${destinationAddress.toCKBAddress()}`); // Address will display different on the CLI since it will be automatically upgraded from the deprecated short format (Pre2021) to the current format (CKB2021).
    console.log(`Amount: ${sendAmount.toString(0)} SUDT Tokens`); // Decimals specified as 0 to print properly.
    console.log(`Transaction Hash: ${txHash}`);
    console.log(`Explorer URL: https://explorer.nervos.org/aggron/transaction/${txHash}`);
})();
